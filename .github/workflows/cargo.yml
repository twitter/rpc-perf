on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

env:
  CARGO_TERM_COLOR: always

jobs:
  linux:
    runs-on: ubuntu-18.04
    steps:
    - uses: actions/checkout@v2
    - uses: actions/cache@v2
      env:
        cache-name: linux
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: ${{ runner.os }}-cargo-${{ env.cache-name }}-${{ hashFiles('**/Cargo.lock') }}
    - name: check
      run: cargo check
    - name: build
      run: cargo build --release
    - name: test
      run: cargo test --release
  linux-tls:
    runs-on: ubuntu-18.04
    steps:
    - uses: actions/checkout@v2
    - uses: actions/cache@v2
      env:
        cache-name: linux-tls
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: ${{ runner.os }}-cargo-${{ env.cache-name }}-${{ hashFiles('**/Cargo.lock') }}
    - name: check
      run: cd rpc-perf && cargo check --features tls
    - name: build
      run: cd rpc-perf && cargo build --release --features tls
    - name: test
      run: cd rpc-perf && cargo test --release --features tls
  macos:
    runs-on: macos-10.15
    steps:
    - uses: actions/checkout@v2
    - uses: actions/cache@v2
      env:
        cache-name: macos
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: ${{ runner.os }}-cargo-${{ env.cache-name }}-${{ hashFiles('**/Cargo.lock') }}
    - name: check
      run: cargo check
    - name: build
      run: cargo build --release
    - name: test
      run: cargo test --release
  macos-tls:
    runs-on: macos-10.15
    steps:
    - uses: actions/checkout@v2
    - uses: actions/cache@v2
      env:
        cache-name: macos-tls
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: ${{ runner.os }}-cargo-${{ env.cache-name }}-${{ hashFiles('**/Cargo.lock') }}
    - name: check
      run: cd rpc-perf && cargo check --features tls
    - name: build
      run: cd rpc-perf && cargo build --release --features tls
    - name: test
      run: cd rpc-perf && cargo test --release --features tls
  rustfmt:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: actions/cache@v2
      env:
        cache-name: rustfmt
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: ${{ runner.os }}-cargo-${{ env.cache-name }}-${{ hashFiles('**/Cargo.lock') }}
    - name: rustfmt
      run: cargo fmt -- --check
  clippy:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: actions/cache@v2
      env:
        cache-name: clippy
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: ${{ runner.os }}-cargo-${{ env.cache-name }}-${{ hashFiles('**/Cargo.lock') }}
    - name: clippy
      run: cargo clippy
  memcache:
    runs-on: ubuntu-latest
    services:
      memcached:
        image: memcached
        ports: 
          - 11211:11211        
    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v2
        env:
          cache-name: memcache
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ env.cache-name }}-${{ hashFiles('**/Cargo.lock') }}
      - name: build
        run: cargo build --release
      - name: run
        run: target/release/rpc-perf --config rpc-perf/configs/default.toml --endpoint localhost:11211
